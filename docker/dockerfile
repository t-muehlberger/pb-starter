FROM node:22-alpine AS client

WORKDIR /client

COPY client/package*.json ./

RUN npm ci

COPY client/ ./

RUN npm run build

FROM golang:1.24 AS build

WORKDIR /build

COPY go.* .

RUN go mod download

COPY . .

COPY --from=client /client/dist ./pb_public

RUN --mount=type=cache,target=/root/.cache/go-build,id=go-build-${TARGETARCH:-amd64} \
    --mount=type=cache,target=/go/pkg/mod,id=go-mod-${TARGETARCH:-amd64} \
    CGO_ENABLED=0 GOOS=linux GOARCH=${TARGETARCH:-amd64} go build -ldflags "-w -s" -a -installsuffix cgo ./cmd/server

FROM alpine:3 AS run

RUN apk add --no-cache \
    ca-certificates

WORKDIR /app

VOLUME /app/pb_data

COPY --from=build /build/server ./
COPY --from=client /client/dist ./pb_public

EXPOSE 8090

CMD ["./server", "serve", "--http=0.0.0.0:8090"]
